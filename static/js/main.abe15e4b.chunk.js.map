{"version":3,"sources":["components/Table/Table.module.css","components/Table/Info.module.css","api/api.js","redux/TableReducer.js","common/errorNotyfi/ErrorNotifi.jsx","components/Table/Table.jsx","components/Table/TableContainer.jsx","redux/LoginReducer.js","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","reportWebVitals.js","redux/store.js","index.js","components/Login/Login.module.css","common/errorNotyfi/ErrorNotifi.module.css","components/Table/Filter.module.css"],"names":["module","exports","table","playerInfo","instance","axios","baseURL","dataAPI","get","then","response","data","Success","RequestToken","requestToken","login","pass","concat","SHA1","AccessToken","filterValues","accessToken","queryString","take","skip","userId","shippingId","status","Result","initialState","Data","isErrorNotifi","errorMsg","notifi","text","updateErrorNotifiAC","value","type","tableReducer","state","arguments","length","undefined","action","Object","objectSpread","ErrorNotifi","props","setTimeout","hideErrorNotifi","react_default","a","createElement","className","s","showErrorNotifi","TextArea","textInfo","TableReduxForm","reduxForm","form","onSubmit","handleSubmit","f","filterWindow","grid","filters","param","label","Field","input","component","name","placeholder","select","button","Table","isAuthorize","content","getOrdersData","errorNotyfi_ErrorNotifi","map","el","date","Date","setSeconds","DateCreated","slice","result","toString","replace","Title","UserId","PhotolabId","Status","TotalPrice","connect","Login","isFetching","dispatch","updateErrorMsgAC","setDataAC","updateLoginValueActionCreator","setAccessTokenAC","loginReducer","navigate","useNavigate","newLoginElement","React","createRef","newPasswordElement","background","shape","htmlFor","onChange","updateLoginValue","current","ref","id","updatePasswordValue","onClick","updateErrorNotifi","Authorization","showErrorMsg","hideErrorMsg","updatePasswordValueActionCreator","setAuthorize","token","App","dist","react_router_dist","path","element","TableContainer","LoginContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","getState","ReactDOM","render","es","src_App","document","getElementById","social","fb","hide","oneSelectInput","areaTwoSelectedInput","twoSelectInput"],"mappings":"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","file":"static/js/main.abe15e4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__2RGiE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerInfo\":\"Info_playerInfo__2epgC\"};","import * as axios from \"axios\";\r\nimport SHA1 from 'crypto-js/sha1';\r\n\r\nconst instance = axios.create({\r\n    //withCredentials: true,\r\n    baseURL: 'http://api.pixlpark.com/',\r\n})\r\n\r\nexport const dataAPI = {\r\n    getRequestToken() {\r\n        return instance.get('oauth/requesttoken').then(response => {\r\n                if (response.data.Success) {\r\n                    return response.data.RequestToken\r\n                }\r\n                else {\r\n                    return false\r\n                }\r\n        })\r\n    },\r\n    getAccessToken(requestToken, login, pass) {\r\n        return instance.get(`oauth/accesstoken?oauth_token=${requestToken}&grant_type=api&username=${login}&password=${SHA1(requestToken + pass)}`).then(response => {\r\n            if(response.data.Success) {\r\n               return response.data.AccessToken\r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n    },\r\n    getOrders(filterValues, accessToken) {\r\n        let queryString = ''\r\n        if(filterValues.take) queryString += `take=${filterValues.take}`\r\n        if(filterValues.skip) queryString += `skip=${filterValues.skip}`\r\n        if(filterValues.userId) queryString += `userId=${filterValues.userId}`\r\n        if(filterValues.shippingId) queryString += `shippingId=${filterValues.shippingId}`\r\n        if(filterValues.status) queryString += `status=${filterValues.status}`\r\n        return instance.get(`orders?oauth_token=${accessToken}&${queryString}`).then(response => {\r\n            return response.data.Result\r\n        })\r\n    },\r\n}\r\n","import {dataAPI} from \"../api/api\";\r\n\r\nconst SET_TABLE_DATA = 'SET_TABLE_DATA'\r\nconst SET_ERROR_NOTIFI = 'SET_ERROR_NOTIFI'\r\nconst UPDATE_ERROR_MSG = 'UPDATE_ERROR_MSG'\r\n\r\nlet initialState = {\r\n    Data: [],\r\n    isErrorNotifi: false,\r\n    errorMsg: {notifi: '', text: ''},\r\n}\r\n\r\nconst tableReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERROR_NOTIFI: {\r\n            return {\r\n                ...state,\r\n                isErrorNotifi: action.value,\r\n            }\r\n        }\r\n        case UPDATE_ERROR_MSG: {\r\n            return {\r\n                ...state,\r\n                errorMsg: action.data\r\n            }\r\n        }\r\n        case SET_TABLE_DATA: {\r\n            return {\r\n                ...state,\r\n                Data: action.data\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst updateErrorNotifiAC = (value) => ({type: SET_ERROR_NOTIFI, value})\r\nconst updateErrorMsgAC = (data) => ({type: UPDATE_ERROR_MSG, data})\r\nconst setDataAC = (data) => ({type: SET_TABLE_DATA, data})\r\n\r\n\r\nexport const hideErrorNotifi = () => {\r\n    return (dispatch) => {\r\n        dispatch(updateErrorNotifiAC(false))\r\n    }\r\n}\r\n\r\nexport const getOrdersData = (filterValues, accessToken) => {\r\n    return (dispatch) => {\r\n        dataAPI.getOrders(filterValues, accessToken).then(data => {\r\n            if(data.length <= 0) {\r\n                dispatch(updateErrorNotifiAC(true))\r\n                dispatch(updateErrorMsgAC({notifi: 'Ошибка', text: 'Не найдено записей по введенным парамертрам'}))\r\n            }\r\n            dispatch(setDataAC(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport default tableReducer","import React, {useState} from \"react\";\r\nimport s from \"./ErrorNotifi.module.css\"\r\nimport {clearErrorMsg} from \"../../redux/TableReducer\";\r\n\r\nconst ErrorNotifi = (props) => {\r\n\r\n    setTimeout(() => {\r\n        props.hideErrorNotifi()\r\n    },3000)\r\n    return (\r\n        <div className={s.showErrorNotifi}>\r\n            <div className={s.TextArea}>\r\n                {props.notifi}\r\n                <div className={s.textInfo}>\r\n                    {props.text}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorNotifi","import React from \"react\";\r\nimport f from \"./Filter.module.css\"\r\nimport s from \"./Table.module.css\"\r\nimport p from \"./Info.module.css\"\r\nimport ErrorNotifi from \"../../common/errorNotyfi/ErrorNotifi\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst TableForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={f.filterWindow}>\r\n                <div className={f.grid}>\r\n\r\n                    <div className={f.filters}>\r\n                        <div className={f.param}>\r\n                            <div className={f.label}>\r\n                                <p>Кол-во возвращаемых заказов</p>\r\n                            </div>\r\n                            <Field className={f.input} component={'input'} name={'take'} placeholder={'take'} type={'number'}/>\r\n                        </div>\r\n                        <div className={f.param}>\r\n                            <div className={f.label}>\r\n                                <p>Вернуть заказы начиная с</p>\r\n                            </div>\r\n                            <Field className={f.input} component={'input'} name={'skip'} placeholder={'skip'} type={'number'}/>\r\n                        </div>\r\n                        <div className={f.param}>\r\n                            <div className={f.label}>\r\n                                <p>Статус заказа</p>\r\n                            </div>\r\n                            <Field className={f.select} component={'select'} name={'status'}>\r\n                                <option value=\"\">Статус</option>\r\n                                <option value=\"NotProcessed\">Not Processed</option>\r\n                                <option value=\"AwaitingPayment\">Awaiting Payment</option>\r\n                                <option value=\"ReadyToProcessing\">Ready To Processing</option>\r\n                                <option value=\"DesignCoordination\">Design Coordination</option>\r\n                                <option value=\"DesignCoordinationComplete\">Design Coordination Complete</option>\r\n                                <option value=\"DesignCoordinationAwaitingReply\">Design Coordination Awaiting Reply</option>\r\n                                <option value=\"PrepressCoordinationComplete\">Prepress Coordination Complete</option>\r\n                                <option value=\"PrepressCoordinationAwaitingReply\">Prepress Coordination Awaiting Reply</option>\r\n                                <option value=\"Printing\">Printing</option>\r\n                                <option value=\"PrintedWithDefect\">Printed With Defect</option>\r\n                                <option value=\"Printed\">Printed</option>\r\n                                <option value=\"Shipped\">Shipped</option>\r\n                                <option value=\"ShippedToStorage\">Shipped To Storage</option>\r\n                                <option value=\"Returned\">Returned</option>\r\n                                <option value=\"Cancelled\">Cancelled</option>\r\n                                <option value=\"CancelledWithDefect\">Cancelled With Defect</option>\r\n                                <option value=\"Refused\">Refused</option>\r\n                                <option value=\"Delivered\">Delivered</option>\r\n                            </Field>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={f.filters}>\r\n                        <div className={f.param}>\r\n                            <div className={f.label}>\r\n                                <p>ID пользователя</p>\r\n                            </div>\r\n                            <Field className={f.input} component={'input'} name={'userId'} placeholder={'userId'} type={'number'}/>\r\n                        </div>\r\n                        <div className={f.param}>\r\n                            <div className={f.label}>\r\n                                <p>ID заказа</p>\r\n                            </div>\r\n                            <Field className={f.input} component={'input'} name={'shippingId'} placeholder={'shippingId'} type={'number'}/>\r\n                        </div>\r\n                        <div className={f.param}>\r\n                            <a>\r\n                                <button className={f.button}>Найти</button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst TableReduxForm = reduxForm({form: 'table'})(TableForm)\r\n\r\nconst Table = (props) => {\r\n\r\n    const searchOrder = (filterValues) => {\r\n        props.getOrdersData(filterValues, props.accessToken)\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {!props.isAuthorize ? null :\r\n                    <div className={f.content}>\r\n                        <TableReduxForm onSubmit={searchOrder}/>\r\n                        {\r\n                            props.isErrorNotifi ? <ErrorNotifi notifi={props.errorMsg.notifi} text={props.errorMsg.text} hideErrorNotifi={props.hideErrorNotifi}/> :\r\n                                !!props.Data.length ?\r\n                                    <div>\r\n                                        <table className={s.table}>\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th>Дата создания</th>\r\n                                                <th>Наименование</th>\r\n                                                <th>ID покупателя</th>\r\n                                                <th>PhotolabId</th>\r\n                                                <th>Cтатус</th>\r\n                                                <th>Стоимость</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {\r\n                                                props.Data.map((el) => {\r\n                                                    let date = new Date()\r\n                                                    date.setSeconds(el.DateCreated.slice(6,-2))\r\n                                                    let result = date.toString().slice(4, -21).replace('T', ' ')\r\n                                                    return (\r\n                                                        <tr>\r\n                                                            <td>{result}</td>\r\n                                                            <td>{el.Title}</td>\r\n                                                            <td>{el.UserId}</td>\r\n                                                            <td>{el.PhotolabId}</td>\r\n                                                            <td>{el.Status}</td>\r\n                                                            <td>{el.TotalPrice}</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import {connect} from \"react-redux\";\r\nimport {\r\n    getOrdersData,\r\n    hideErrorNotifi\r\n} from \"../../redux/TableReducer\";\r\nimport Table from \"./Table\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuthorize: state.Login.isAuthorize,\r\n        accessToken: state.Login.accessToken,\r\n\r\n        isFetching: state.Table.isFetching,\r\n        isErrorNotifi: state.Table.isErrorNotifi,\r\n        errorMsg: state.Table.errorMsg,\r\n        Data: state.Table.Data,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    hideErrorNotifi,\r\n    getOrdersData,\r\n})(Table)\r\n","import {dataAPI} from \"../api/api\";\r\n\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst UPDATE_LOGIN_VALUE = 'UPDATE_LOGIN_VALUE'\r\nconst UPDATE_PASSWORD_VALUE = 'UPDATE_PASSWORD_VALUE'\r\nconst SET_AUTHORIZATION = 'SET_AUTHORIZATION'\r\nconst SET_REQUEST_TOKEN = 'SET_REQUEST_TOKEN'\r\nconst SET_ACCESS_TOKEN = 'SET_ACCESS_TOKEN'\r\n\r\nlet initialState = {\r\n    isErrorNotifi: false,\r\n    login: '',\r\n    pass: '',\r\n    isAuthorize: false,\r\n    requestToken: '',\r\n    accessToken: '',\r\n}\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                isErrorNotifi: action.value,\r\n                login: '',\r\n                pass: '',\r\n            }\r\n        }\r\n        case UPDATE_LOGIN_VALUE: {\r\n            return {\r\n                ...state,\r\n                login: action.value,\r\n            }\r\n        }\r\n        case UPDATE_PASSWORD_VALUE: {\r\n            return {\r\n                ...state,\r\n                pass: action.value,\r\n            }\r\n        }\r\n        case SET_AUTHORIZATION: {\r\n            return {\r\n                ...state,\r\n                isAuthorize: true,\r\n            }\r\n        }\r\n        case SET_REQUEST_TOKEN: {\r\n            return {\r\n                ...state,\r\n                requestToken: action.value,\r\n            }\r\n        }\r\n        case SET_ACCESS_TOKEN: {\r\n            return {\r\n                ...state,\r\n                accessToken: action.value,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst updateErrorNotifiAC = (value) => ({type: SET_ERROR, value})\r\nconst updateLoginValueActionCreator = (value) => ({type: UPDATE_LOGIN_VALUE, value})\r\nconst updatePasswordValueActionCreator = (value) => ({type: UPDATE_PASSWORD_VALUE, value})\r\nconst setAuthorizeAC = () => ({type: SET_AUTHORIZATION})\r\nconst setRequestTokenAC = (value) => ({type: SET_REQUEST_TOKEN, value})\r\nconst setAccessTokenAC = (value) => ({type: SET_ACCESS_TOKEN, value})\r\n\r\nexport const updateErrorNotifi = (value) => {\r\n    return (dispatch) => {\r\n        dispatch(updateLoginValueActionCreator(value))\r\n    }\r\n}\r\nexport const updateLoginValue = (value) => {\r\n    return (dispatch) => {\r\n        dispatch(updateLoginValueActionCreator(value))\r\n    }\r\n}\r\nexport const updatePasswordValue = (value) => {\r\n    return (dispatch) => {\r\n        dispatch(updatePasswordValueActionCreator(value))\r\n    }\r\n}\r\nexport const setAuthorize = () => {\r\n    return (dispatch) => {\r\n        dispatch(setAuthorizeAC())\r\n    }\r\n}\r\nexport const setAccessToken = (token) => {\r\n    return (dispatch) => {\r\n        dispatch(setAccessTokenAC(token))\r\n    }\r\n}\r\nexport const Authorization = (token, login, pass) => {\r\n    return (dispatch) => {\r\n        dispatch(updateErrorNotifiAC(false))\r\n        dispatch(setRequestTokenAC(token))\r\n        dataAPI.getAccessToken(token, login, pass).then(data => {\r\n            if (data) {\r\n                dispatch(setAccessTokenAC(data))\r\n                dispatch(setAuthorizeAC())\r\n            } else {\r\n                dispatch(updateErrorNotifiAC(true))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default loginReducer","import React, {useEffect, useState} from 'react';\r\nimport s from \"./Login.module.css\"\r\n\r\nimport {Link, Redirect, useNavigate} from \"react-router-dom\";\r\nimport {dataAPI} from \"../../api/api\";\r\nimport {setRequestToken, updateErrorNotifi} from \"../../redux/LoginReducer\";\r\n\r\nconst Login = (props) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    let newLoginElement = React.createRef()\r\n    let newPasswordElement = React.createRef()\r\n\r\n    let onLoginChange = () => {\r\n        props.updateLoginValue(newLoginElement.current.value)\r\n    }\r\n\r\n    let onPasswordChange = () => {\r\n        props.updatePasswordValue(newPasswordElement.current.value)\r\n    }\r\n\r\n    let onLoginBtnClick = () => {\r\n        const {login, pass, updateErrorNotifi} = props\r\n        updateErrorNotifi(false)\r\n        if (login.length <= 0 || pass.length <= 0) {\r\n            updateErrorNotifi(true)\r\n            return\r\n        }\r\n        dataAPI.getRequestToken().then(data => {\r\n            if(data) {\r\n                props.Authorization(data, login, pass)\r\n            } else {\r\n                updateErrorNotifi(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const checkAuthorization = () => {\r\n        if(props.isAuthorize) {\r\n            navigate(\"/table\")\r\n        }\r\n    }\r\n    checkAuthorization()\r\n\r\n    return (\r\n        <div>\r\n            <div className={ s.background }>\r\n                <div className={ s.shape }></div>\r\n                <div className={ s.shape }></div>\r\n            </div>\r\n            <div className={s.form}>\r\n                <h3>Orders List</h3>\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input onChange={ onLoginChange } ref={ newLoginElement } value={props.login} type=\"text\" placeholder=\"Login\" id=\"username\"/>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input onChange={ onPasswordChange } ref={ newPasswordElement } value={props.pass} type=\"password\" placeholder=\"Password\" id=\"password\"/>\r\n                <button onClick={ onLoginBtnClick }>Log in</button>\r\n                <div className={props.isErrorNotifi ? s.showErrorMsg : s.hideErrorMsg}>Неверный логин или пароль</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import {connect} from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport {\r\n    setAuthorize,\r\n    Authorization,\r\n    updateLoginValue,\r\n    updatePasswordValue,\r\n    updateErrorNotifi\r\n} from \"../../redux/LoginReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isErrorNotifi: state.Login.isErrorNotifi,\r\n        login: state.Login.login,\r\n        pass: state.Login.pass,\r\n        isAuthorize: state.Login.isAuthorize,\r\n        requestToken: state.Login.requestToken,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateErrorNotifi,\r\n    updateLoginValue,\r\n    updatePasswordValue,\r\n    setAuthorize,\r\n    Authorization,\r\n})(Login)","import './App.css';\r\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\r\nimport TableContainer from \"./components/Table/TableContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"App\">\r\n                <Routes>\r\n                    <Route path=\"/table/*\" element={<TableContainer />}/>\r\n                    <Route path=\"/*\" element={<LoginContainer />}/>\r\n                </Routes>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport tableReducer from \"./TableReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport loginReducer from \"./LoginReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    Table: tableReducer,\r\n    Login: loginReducer,\r\n    form: formReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n//window.store = store\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport store from './redux/store'\r\n\r\nlet rerenderEntireTree = (state) => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nrerenderEntireTree(store.getState())\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Login_background__30A6j\",\"shape\":\"Login_shape__ROF25\",\"form\":\"Login_form__3vfp6\",\"social\":\"Login_social__hMbhh\",\"fb\":\"Login_fb__2kCmf\",\"showErrorMsg\":\"Login_showErrorMsg__e25kd\",\"hideErrorMsg\":\"Login_hideErrorMsg__kEH-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showErrorNotifi\":\"ErrorNotifi_showErrorNotifi__2rCHJ\",\"hide\":\"ErrorNotifi_hide__2mwNo\",\"TextArea\":\"ErrorNotifi_TextArea__7LAOT\",\"textInfo\":\"ErrorNotifi_textInfo__Efol_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Filter_content__3NnY2\",\"filterWindow\":\"Filter_filterWindow__22M4D\",\"grid\":\"Filter_grid__3eVCH\",\"filters\":\"Filter_filters__15war\",\"param\":\"Filter_param__2Fi2Y\",\"label\":\"Filter_label__2xxqZ\",\"input\":\"Filter_input__SfmhU\",\"oneSelectInput\":\"Filter_oneSelectInput__2YlxI\",\"areaTwoSelectedInput\":\"Filter_areaTwoSelectedInput__3CQkA\",\"twoSelectInput\":\"Filter_twoSelectInput__1CLxn\",\"button\":\"Filter_button__3ejG0\"};"],"sourceRoot":""}